'use strict';function cov_19vtv1tiki(){var path="/home/manjunathan/crudapp/RestApi/models/user.js";var hash="0ec86743310655eaf956a5f2fce7cbae22e5f355";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/manjunathan/crudapp/RestApi/models/user.js",statementMap:{"0":{start:{line:4,column:4},end:{line:4,column:24}},"1":{start:{line:5,column:0},end:{line:24,column:2}},"2":{start:{line:16,column:2},end:{line:22,column:5}},"3":{start:{line:23,column:2},end:{line:23,column:14}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:5,column:17},end:{line:5,column:18}},loc:{start:{line:5,column:43},end:{line:24,column:1}},line:5},"1":{name:"(anonymous_1)",decl:{start:{line:12,column:4},end:{line:12,column:5}},loc:{start:{line:12,column:29},end:{line:14,column:5}},line:12}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0},f:{"0":0,"1":0},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"0ec86743310655eaf956a5f2fce7cbae22e5f355"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_19vtv1tiki=function(){return actualCoverage;};}return actualCoverage;}cov_19vtv1tiki();const{Model}=(cov_19vtv1tiki().s[0]++,require('sequelize'));cov_19vtv1tiki().s[1]++;module.exports=(sequelize,DataTypes)=>{cov_19vtv1tiki().f[0]++;class User extends Model{/**
     * Helper method for defining associations.
     * This method is not a part of Sequelize lifecycle.
     * The `models/index` file will call this method automatically.
     */static associate(models){// define association here
cov_19vtv1tiki().f[1]++;}};cov_19vtv1tiki().s[2]++;User.init({email:DataTypes.STRING,password:DataTypes.STRING},{sequelize,modelName:'User'});cov_19vtv1tiki().s[3]++;return User;};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsiTW9kZWwiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsInNlcXVlbGl6ZSIsIkRhdGFUeXBlcyIsIlVzZXIiLCJhc3NvY2lhdGUiLCJtb2RlbHMiLCJpbml0IiwiZW1haWwiLCJTVFJJTkciLCJwYXNzd29yZCIsIm1vZGVsTmFtZSJdLCJtYXBwaW5ncyI6IkFBQUEsYSx1bUNBZVk7MkZBZFosS0FBTSxDQUNKQSxLQURJLDJCQUVGQyxPQUFPLENBQUMsV0FBRCxDQUZMLENBQU4sQyx3QkFHQUMsTUFBTSxDQUFDQyxPQUFQLENBQWlCLENBQUNDLFNBQUQsQ0FBWUMsU0FBWixHQUEwQix5QkFDekMsS0FBTUMsQ0FBQUEsSUFBTixRQUFtQk4sQ0FBQUEsS0FBTSxDQUN2QjtBQUNKO0FBQ0E7QUFDQTtBQUNBLE9BQ29CLE1BQVRPLENBQUFBLFNBQVMsQ0FBQ0MsTUFBRCxDQUFTLENBQ3ZCO0FBRHVCLHdCQUV4QixDQVJzQixDQVN4QixDQVZ3Qyx3QkFXekNGLElBQUksQ0FBQ0csSUFBTCxDQUFVLENBQ1JDLEtBQUssQ0FBRUwsU0FBUyxDQUFDTSxNQURULENBRVJDLFFBQVEsQ0FBRVAsU0FBUyxDQUFDTSxNQUZaLENBQVYsQ0FHRyxDQUNEUCxTQURDLENBRURTLFNBQVMsQ0FBRSxNQUZWLENBSEgsRUFYeUMsd0JBa0J6QyxNQUFPUCxDQUFBQSxJQUFQLENBQ0QsQ0FuQkQiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5jb25zdCB7XG4gIE1vZGVsXG59ID0gcmVxdWlyZSgnc2VxdWVsaXplJyk7XG5tb2R1bGUuZXhwb3J0cyA9IChzZXF1ZWxpemUsIERhdGFUeXBlcykgPT4ge1xuICBjbGFzcyBVc2VyIGV4dGVuZHMgTW9kZWwge1xuICAgIC8qKlxuICAgICAqIEhlbHBlciBtZXRob2QgZm9yIGRlZmluaW5nIGFzc29jaWF0aW9ucy5cbiAgICAgKiBUaGlzIG1ldGhvZCBpcyBub3QgYSBwYXJ0IG9mIFNlcXVlbGl6ZSBsaWZlY3ljbGUuXG4gICAgICogVGhlIGBtb2RlbHMvaW5kZXhgIGZpbGUgd2lsbCBjYWxsIHRoaXMgbWV0aG9kIGF1dG9tYXRpY2FsbHkuXG4gICAgICovXG4gICAgc3RhdGljIGFzc29jaWF0ZShtb2RlbHMpIHtcbiAgICAgIC8vIGRlZmluZSBhc3NvY2lhdGlvbiBoZXJlXG4gICAgfVxuICB9O1xuICBVc2VyLmluaXQoe1xuICAgIGVtYWlsOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgIHBhc3N3b3JkOiBEYXRhVHlwZXMuU1RSSU5HXG4gIH0sIHtcbiAgICBzZXF1ZWxpemUsXG4gICAgbW9kZWxOYW1lOiAnVXNlcicsXG4gIH0pO1xuICByZXR1cm4gVXNlcjtcbn07Il19