'use strict';function cov_1fdq7jrq99(){var path="/home/manjunathan/crudapp/RestApi/models/student.js";var hash="af60f2c2976a4275c503946ea4b765dff246e6c9";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/manjunathan/crudapp/RestApi/models/student.js",statementMap:{"0":{start:{line:4,column:4},end:{line:4,column:24}},"1":{start:{line:5,column:0},end:{line:29,column:2}},"2":{start:{line:16,column:2},end:{line:27,column:5}},"3":{start:{line:28,column:2},end:{line:28,column:17}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:5,column:17},end:{line:5,column:18}},loc:{start:{line:5,column:43},end:{line:29,column:1}},line:5},"1":{name:"(anonymous_1)",decl:{start:{line:12,column:4},end:{line:12,column:5}},loc:{start:{line:12,column:29},end:{line:14,column:5}},line:12}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0},f:{"0":0,"1":0},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"af60f2c2976a4275c503946ea4b765dff246e6c9"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1fdq7jrq99=function(){return actualCoverage;};}return actualCoverage;}cov_1fdq7jrq99();const{Model,cast}=(cov_1fdq7jrq99().s[0]++,require('sequelize'));cov_1fdq7jrq99().s[1]++;module.exports=(sequelize,DataTypes)=>{cov_1fdq7jrq99().f[0]++;class Student extends Model{/**
     * Helper method for defining associations.
     * This method is not a part of Sequelize lifecycle.
     * The `models/index` file will call this method automatically.
     */static associate(models){// define association here
cov_1fdq7jrq99().f[1]++;}};cov_1fdq7jrq99().s[2]++;Student.init({name:DataTypes.STRING,sem:DataTypes.INTEGER,branch:DataTypes.STRING,email:DataTypes.STRING},{sequelize,paranoid:true,timestamps:true,modelName:'Student'});cov_1fdq7jrq99().s[3]++;return Student;};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0dWRlbnQuanMiXSwibmFtZXMiOlsiTW9kZWwiLCJjYXN0IiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJzZXF1ZWxpemUiLCJEYXRhVHlwZXMiLCJTdHVkZW50IiwiYXNzb2NpYXRlIiwibW9kZWxzIiwiaW5pdCIsIm5hbWUiLCJTVFJJTkciLCJzZW0iLCJJTlRFR0VSIiwiYnJhbmNoIiwiZW1haWwiLCJwYXJhbm9pZCIsInRpbWVzdGFtcHMiLCJtb2RlbE5hbWUiXSwibWFwcGluZ3MiOiJBQUFBLGEsNm1DQWVZOzJGQWRaLEtBQU0sQ0FDSkEsS0FESSxDQUNHQyxJQURILDJCQUVGQyxPQUFPLENBQUMsV0FBRCxDQUZMLENBQU4sQyx3QkFHQUMsTUFBTSxDQUFDQyxPQUFQLENBQWlCLENBQUNDLFNBQUQsQ0FBWUMsU0FBWixHQUEwQix5QkFDekMsS0FBTUMsQ0FBQUEsT0FBTixRQUFzQlAsQ0FBQUEsS0FBTSxDQUMxQjtBQUNKO0FBQ0E7QUFDQTtBQUNBLE9BQ29CLE1BQVRRLENBQUFBLFNBQVMsQ0FBQ0MsTUFBRCxDQUFTLENBQ3ZCO0FBRHVCLHdCQUV4QixDQVJ5QixDQVMzQixDQVZ3Qyx3QkFXekNGLE9BQU8sQ0FBQ0csSUFBUixDQUFhLENBQ1hDLElBQUksQ0FBRUwsU0FBUyxDQUFDTSxNQURMLENBRVhDLEdBQUcsQ0FBRVAsU0FBUyxDQUFDUSxPQUZKLENBR1hDLE1BQU0sQ0FBRVQsU0FBUyxDQUFDTSxNQUhQLENBSVhJLEtBQUssQ0FBR1YsU0FBUyxDQUFDTSxNQUpQLENBQWIsQ0FLRyxDQUNEUCxTQURDLENBRURZLFFBQVEsQ0FBRyxJQUZWLENBSURDLFVBQVUsQ0FBQyxJQUpWLENBS0RDLFNBQVMsQ0FBRSxTQUxWLENBTEgsRUFYeUMsd0JBdUJ6QyxNQUFPWixDQUFBQSxPQUFQLENBQ0QsQ0F4QkQiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5jb25zdCB7XG4gIE1vZGVsLCBjYXN0XG59ID0gcmVxdWlyZSgnc2VxdWVsaXplJyk7XG5tb2R1bGUuZXhwb3J0cyA9IChzZXF1ZWxpemUsIERhdGFUeXBlcykgPT4ge1xuICBjbGFzcyBTdHVkZW50IGV4dGVuZHMgTW9kZWwge1xuICAgIC8qKlxuICAgICAqIEhlbHBlciBtZXRob2QgZm9yIGRlZmluaW5nIGFzc29jaWF0aW9ucy5cbiAgICAgKiBUaGlzIG1ldGhvZCBpcyBub3QgYSBwYXJ0IG9mIFNlcXVlbGl6ZSBsaWZlY3ljbGUuXG4gICAgICogVGhlIGBtb2RlbHMvaW5kZXhgIGZpbGUgd2lsbCBjYWxsIHRoaXMgbWV0aG9kIGF1dG9tYXRpY2FsbHkuXG4gICAgICovXG4gICAgc3RhdGljIGFzc29jaWF0ZShtb2RlbHMpIHtcbiAgICAgIC8vIGRlZmluZSBhc3NvY2lhdGlvbiBoZXJlXG4gICAgfVxuICB9O1xuICBTdHVkZW50LmluaXQoe1xuICAgIG5hbWU6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgc2VtOiBEYXRhVHlwZXMuSU5URUdFUixcbiAgICBicmFuY2g6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgZW1haWwgOiBEYXRhVHlwZXMuU1RSSU5HXG4gIH0sIHtcbiAgICBzZXF1ZWxpemUsXG4gICAgcGFyYW5vaWQgOiB0cnVlLFxuICAgIFxuICAgIHRpbWVzdGFtcHM6dHJ1ZSxcbiAgICBtb2RlbE5hbWU6ICdTdHVkZW50JyxcbiAgfSk7XG4gIHJldHVybiBTdHVkZW50O1xufTtcblxuXG4iXX0=